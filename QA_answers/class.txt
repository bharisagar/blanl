Notes on 02/05/2025


boolean opeartors

|| ----> OR_if
&& ----> and_if 

Loops: 

	if, elif, else, while, for, case, functions
	
1. if: 
	if [condition]; then
		echo "statement"
	fi 
	
	e.g : if [ $file_size -eq 4 ]; then
			echo "the above file size id 4kb"
		  fi

2. else: 
	if [condition-1]; the 
		echo "statement-1"
	else 
		echo"statement-2"
	fi 
	
	e.g : if [ $file_size -eq 4 ]; then 
			echo "the file size is 4kb"
		  else 
			echo "the file size is not 4kb"
		  fi
		  
3. elif: 
	if [condition-1]; then 
		echo "statement-1"
	elif [condition-2]; the 
		echo "statement-2"
	else 
		echo "statement-3"
	fi 
	
	e.g : if [ $color = red ]; then
			echo "the color is red"
		  elif [ $color = black ]; then 
		    echo "the color is black"
		  else 
		    echo "the color is green"
		  fi
		  
4. while: it will read the program/script line by line untill and unless the condition true.

		while [condition]; do 
			echo "statement"
		done
		
		e.g: while [ $file_size -eq 7 ]; do 
				echo "the file size is 7"
			 done
			 
5. for : 

		for i in name; do
			echo "statement"
		done
		
		e.g :for i in 3 4 7 6 8; do 
				echo $i
			 done 
			 

scripts:
1.
#!/bin/bash

num=10

if [ $num -gt 5 ]; then
        echo "$num is greater than 4"
fi

2.
#!/bin/bash

file="test.txt"

if [ -f "$file" ]; then
        echo "$file is exist"
else
        echo "$file does not exist"
fi

3.
#!/bin/bash

file="test.txt"

if [ -f "$file" ]; then
        echo "$file is exist"
else
        touch test.txt > file.txt
fi

4.
#!/bin/bash

num=3

if [ $num -gt 5 ]; then
        echo "$num is greater than 5"
else 
		echo "$num is not greater than 5"
fi


5. 
#!/bin/bash

num=5

if [ $num -gt 5 ]; then
        echo "$num is greater than 5"
elif [ $num -eq 5 ]; then
		echo "$num is equals 5"
else
        echo "$num is less than 5"
fi
